# TODO: Name of the project, in the form "user/project"
project: "devops/docker-hdfs"

# TODO: Same as the project name above
repository: "devops/docker-hdfs"

# TODO: git clone url (must end <project>.git as shown in the example)
cloneURL: "https://gitea-tooling.az.globaldevops.gdpdentsu.net/devops/docker-hdfs.git"

# TODO: CREATE YOUR OWN RANDOM VALUE HERE (it will be used later when setting up the webhook in Gitea)
sharedSecret: "HbADEMHZVCfsGysGbwPe"

# OPTIONAL: initGitSubmodules will recursively initialize all submodules in the repository. Default: false
# initGitSubmodules: "false"

# OPTIONAL: defaultScript is the brigade.js used by default when your VCS repo misses a brigade.js
# in it.
# defaultScript: |
#   const { events, Job } = require("brigadier")
#   function run(e, project) {
#     console.log("hello default script")
#   }
#   events.on("run", run)

# OPTIONAL: Use this for private repositories
# This is the PRIVATE key that Brigade will use to clone a private repo.
# You should generate a special key for this. Don't reuse another one.
#sshKey: |-

# OPTIONAL: Items in the 'secrets' array can be mounted as environment variables by
# the brigade.js
#
# Example:
#
# In JS, do this:
#
#   events.push = function(e, p) {
#     j = new Job("example")
#     j.env= {"MY_ENV_VAR": p.secrets.myVar}
#   }
#
# And here, add this:
#
#   secrets:
#     myVar: "super awesome"
#
# Inside of the job's pod, $MY_ENV_VAR = "super awesome"
#secrets:
  # Example:
  ## username: hello
  #giteauser: pipeline
  #giteapass: pssword
  #azure_client_id:  client_id
  #azure_client_secret: client_secret
  #azure_tenant_id: tenant_id

# OPTIONAL: Namespace into which builds will be deployed.
# Using this has implications for what you can access, so don't set this unless
# you know what you are doing.
# namespace: "default"

# OPTIONAL: vcsSidecar is the image that fetches a repo from a VCS
# The default sidecar uses Git to fetch a copy of the project.
#
# If this is not supplied, `deis/git-sidecar:VERSION` will be used, where VERSION
# is the version of this chart.
#
# If this is set to NONE, no sidecar is used.  This may improve performance
# very slightly, but will break some gateways or cause the default script to
# be used.
#vcsSidecar: "deis/git-sidecar:latest"
vcsSidecar: globaldevopsreg11.azurecr.io/vcssidecar:v1.11

# OPTIONAL: buildStorageSize is the size of the shared storage space used by the jobs
buildStorageSize: "300Mi"

# Allow Jobs to run in privileged mode. This will allow features like
# Docker-in-Docker. This must be set to true before turning allowHostMounts
# on.
allowPrivilegedJobs: "true"

# OPTIONAL: Use this to allow host mounted docker sockets in your jobs.
# This is a big security risk if your project is public-facing; enable at your own risk.
allowHostMounts: "true"

# Kubernetes-specific configuration options.
kubernetes:
  # Allow or disallow usage of secretKeyRef in job environments.
  allowSecretKeyRef: "true"
  # OPTIONAL: Override the storage class used for storing job caches. This must
  # point to a readWriteMany volume provisioner.
  cacheStorageClass: azurefile
  # OPTIONAL: Override the storage class used for build storage. This must
  # point to a readWriteMany volume provisioner.
  buildStorageClass: azurefile


    
worker: 
  registry: globaldevopsreg11.azurecr.io
  name: devops-brigade-worker
  tag: 0.0.303
  pullPolicy: Always



###
# ADAVANCED
###

# OPTIONAL: specify an alternative command that the worker pod should run on startup.
# For example, if you want the typescript compiler to re-run, replace this with
# 'yarn build-start'. The default is 'yarn -s start' (-s is for silent).
# Uncomment the line below to increase logging verbosity.
# workerCommand: "yarn start"
